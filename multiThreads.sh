#!/bin/sh

trap "exec 6>&- && exit 0" USR1 INT TERM

threads=50  #线程数
tmpfile=$$.fifo.tmp #脚本运行的当前进程ID号作为文件名，其实这样命名只是为了防止创建管道文件时与现有文件名重复，从而引起创建失败，别无他用。
mkfifo $tmpfile #创建管道文件
exec 6<>$tmpfile #把文件描述符6指向管道文件
#rm -f $tmpfile

ip_list="10.134.53.57 10.134.14.91 10.134.14.37 10.134.14.109 10.134.14.110 10.134.14.111 10.134.14.112 10.134.14.113 10.134.14.114 10.134.14.115 10.134.14.117 10.134.14.118 10.134.14.119 10.134.14.120 10.134.14.121 10.134.14.122 10.134.14.123 10.134.14.124 10.134.14.125 10.134.14.126 10.134.14.127 10.134.15.20 10.134.15.21 10.134.15.22 10.134.15.23 10.134.15.24 10.134.15.25 10.134.15.26 10.134.15.28 10.134.15.29 10.134.15.30 10.134.15.31 10.134.14.67 10.134.14.68 10.134.14.69 10.134.14.70 10.134.14.71 10.134.14.72 10.134.14.73 10.134.14.74 10.134.14.75 10.134.14.76 10.134.14.77 10.134.14.78 10.134.14.79 10.134.14.80 10.134.10.58 10.134.14.81 10.134.14.82 10.134.14.83 10.134.14.84 10.134.14.85 10.134.14.86 10.134.14.87 10.134.14.88 10.134.14.89 10.134.14.90 10.134.14.91 10.134.14.92 10.134.14.93 10.134.14.94 10.134.14.96 10.134.14.97 10.134.8.84 10.134.14.59 10.134.14.60 10.134.8.88 10.134.14.66 10.134.8.90 10.134.13.82 10.134.13.83 10.134.13.85 10.134.14.31 10.134.14.32 10.134.14.33 10.134.14.34 10.134.14.35 10.134.14.36 10.134.14.37 10.134.14.38 10.134.14.39 10.134.14.40 10.134.14.41 10.134.14.42 10.134.14.43 10.134.14.44 10.134.14.45 10.134.14.46 10.134.14.47 10.134.14.48 10.134.14.50 10.134.15.76 10.134.13.25 10.134.13.30 10.134.15.69 10.134.12.122 10.134.12.127 10.134.73.60 10.134.73.61 10.134.73.62 10.134.74.106 10.134.74.107 10.134.74.108 10.134.80.41 10.134.80.51 10.134.80.52 10.134.86.78 10.134.82.119 10.134.82.122 10.134.81.28 10.134.81.29 10.134.81.30 10.134.81.66 10.134.82.52 10.134.82.62 10.134.82.63 10.134.87.60 10.134.84.71 10.134.84.82 10.134.84.22 10.134.84.23 10.134.84.24 10.134.83.73 10.134.83.84 10.134.83.85 10.134.85.45 10.134.85.55 10.134.85.56 10.134.85.127 10.134.86.29 10.134.86.30 10.134.88.43 10.134.88.54"

for((i=1;i<=$threads;i++)); do
	echo 
done >&6 #使用一个for循环向管道中输入$threads个空行

for ip in $ip_list;do
#for ip in ${ip_list[*]}; do
	read -u6 #从文件描述符6（即管道）中读取行，每次读一行，由于是管道，读一行，管道中便少一行，每次只能读取一行，注意：如果读完了，便会挂起，直到管道中再次有可读的行。

	(ping $ip -c 3 >/dev/null
	if [ $? -ne 0 ]; then
		echo -e "$ip\tis dead"
	else
		echo -e "$ip\tis live"
	fi
	echo >&6) & #实际应用部分，需要注意两点：1.使用&放到后台运行，2."echo >&6"再次往管道文件中写入一个空行，为了挂起的for循环能够继续执行。
#done <&6
done
wait #等到后台的进程都执行完毕
exec 6>&- #关闭文件描述符6
